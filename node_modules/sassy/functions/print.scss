///--------------------------------------------------------------------------///

///
/// @method print
/// formats a map to a string
/// @param map {map} the map to print
///

@function print( $map ){
  
  $s: '( ';
  //, $break:false 
  //$b: '\000d';
  
  //@if $break { $s: $s + $b ; }
  
  $k: map-keys( $map );
  $i: 0;
  $l: length( $k );
  
  @each $k, $v in $map {
    
    $i: $i+1;
    
    $s: $s + $k + ': ';
    
    @if type-of( $v ) == map {
      $v: print( $v );
    }
        
    //@if $break { $s: $s + $b ; }
    
    $s: $s + $v;
    
    @if $i != $l { $s: $s + ', ' }
    
  }
  
  //@if $break { $s: $s + $b ; }
  
  $s: $s + ' )';
  
  @return $s;
  
}

///--------------------------------------------------------------------------///

@if false {

  $a: ( a: generic, map: here );
  $e: '( a: generic, map: here )';
  $r: print( $a );
  @debug 'print works: #{ $r == $e }';
  
  $a: ( a: generic, map: ( sub: here ) );
  $e: '( a: generic, map: ( sub: here ) )';
  $r: print( $a );
  @debug 'print [deep] works: #{ $r == $e }';
  
}

///--------------------------------------------------------------------------///
