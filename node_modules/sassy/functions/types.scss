///--------------------------------------------------------------------------///

@import 'type';

///--------------------------------------------------------------------------///

///
/// @method types
/// get the type of each argument, returned as list of strings
/// @param var {any} the var to get type-of
/// @param [against] {string} what the var type-of should be
/// @return result {string|boolean}
/// @uses compare
///

///--------------------------------------------------------------------------///

@function types( $vars... ){
  
  $r: ();
  
  //if a single var, assume it is vars as map or list
  @if length( $vars ) == 1 {
    $vars: nth( $vars, 1 );
  }
  
  //add each var's type to typelist ($r)
  @each $v in $vars {
    $r: append( $r, type($v) );
  }  
  
  @return $r;
}

///--------------------------------------------------------------------------///

@if false {

  @debug 'types works: #{ types( true, 1 ) == ( bool number ) }';
  @debug 'types [single list] works: #{ types( ( true, 1 ) ) == ( bool number ) }';

}

///--------------------------------------------------------------------------///
