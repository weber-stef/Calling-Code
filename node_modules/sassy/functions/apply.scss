///--------------------------------------------------------------------------///

///
/// @method apply
/// similar to JS apply, accepts a method and an array (list) of arguments
/// 

@function apply( $method, $args... ){
  
  $_DEBUG: false;
  
  $l: length($args);
  $r: null;
  
  @if $_DEBUG { @debug 'found #{$l} args'; }
  
  //handle single arg
  @if $l == 1 {
    
    //get arg
    $a: nth( $args, 1 );
    $t: type-of( $a );
    
    @if $_DEBUG { @debug 'calling #{$method} with single arg ( #{$t} )'; }    
    
    $am: false; //argmap? (list held safe in map)
    
    //if list, pass as arglist
    @if $t == map {
      $am: map-has-key( $a, args );
    } 
    
    @if $am {
      $x: map-get( $a, args );
      $r: call( $method, $x ); //pass list as single arg
    }
    @else {      
      //call using arglist technique (converts list to params)
      $r: call( $method, $a... ); //!!! IF YOU SEE AN ERROR, your IDE is lying to you!
      //@if $_DEBUG { @debug 'calling with arglist'; }
      //call with arglist if multiple 
      //$r: call( $method, $args );
      //@debug $method + ' returned '+ $r;
    }
  }
  
  @return $r;
  
}

///--------------------------------------------------------------------------///

/// inline debugging is too messy for apply()

///--------------------------------------------------------------------------///